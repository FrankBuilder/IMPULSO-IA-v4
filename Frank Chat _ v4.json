{
  "name": "Frank Chat | v4",
  "nodes": [
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  ls.contact_id,\n  ls.company_id,\n  ls.authority_score,\n  ls.need_score,\n  ls.urgency_score,\n  ls.money_score,\n  ls.total_score,\n  ls.qualification_stage,\n  ls.is_qualified,\n  ce.audio_response,\n  ce.text_response\nFROM corev4_lead_state ls\nLEFT JOIN corev4_contact_extras ce ON ls.contact_id = ce.contact_id\nWHERE ls.contact_id = {{ $('Prepare: Chat Context').item.json.contact_id }}\n  AND ls.company_id = {{ $('Prepare: Chat Context').item.json.company_id }}\nLIMIT 1;",
        "options": {}
      },
      "id": "9e80fe28-80bb-4765-babb-c8eb289989e8",
      "name": "Fetch: Lead State and Preferences",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3312,
        4
      ],
      "credentials": {
        "postgres": {
          "id": "HCvX4Ypw2MiRDsdm",
          "name": "Postgres Core"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -384,
        248
      ],
      "id": "cbc1ba66-480b-4a26-9b2d-f0d4410a5b89",
      "name": "Merge: AI Outputs"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# CONTEXTO DA CONVERSA\n\nNome do Lead: {{ $('Prepare: Chat Context').item.json.contact_name }}\nContact ID: {{ $('Prepare: Chat Context').item.json.contact_id }}\nTipo de Mensagem: {{ $('Prepare: Chat Context').item.json.message_type }}\n{{ $('Prepare: Chat Context').item.json.quoted_message ? '\\n‚ö†Ô∏è ATEN√á√ÉO: O lead est√° RESPONDENDO ou MARCANDO uma mensagem anterior.\\nConsulte sua MEM√ìRIA para relembrar o contexto da mensagem marcada e interpretar a inten√ß√£o corretamente.\\n' : '' }}\nMensagem recebida:\n\"{{ $('Prepare: Chat Context').item.json.message_content }}\"\n\n{{ $('Prepare: Chat Context').item.json.has_image ? '\\nüì∏ H√° uma imagem anexada. Voc√™ pode ver e interpretar o conte√∫do da imagem para enriquecer sua resposta.\\n' : '' }}\n\n---\n\n# SUA TAREFA\n\nVoc√™ √© **FRANK**, consultor da **CoreConnect AI**, especializado em **automa√ß√£o inteligente para neg√≥cios**.\n\nSeu papel √© **compreender e orientar**, n√£o vender.  \nAdote uma postura de **consultor experiente, emp√°tico e curioso**.\n\n## üéØ Objetivo\nInterpretar a mensagem recebida e responder de forma natural, consultiva e humanizada.  \nSe houver indica√ß√£o ‚ö†Ô∏è, utilize sua **mem√≥ria de contexto** para entender o que est√° sendo respondido antes de elaborar a nova mensagem.\n\n---\n\n# GUIA DE CONDUTA\n\n1. **Linguagem:**  \n   - Natural e envolvente (nada rob√≥tico)  \n   - 2 a 4 senten√ßas por resposta  \n   - Sem emojis, exceto se o lead usar primeiro  \n\n2. **Uso do nome:**  \n   - Utilize o nome do lead **no m√°ximo 1 vez** por mensagem  \n   - Evite repeti√ß√µes autom√°ticas (‚ÄúOl√°, Jo√£o... tudo bem?‚Äù)  \n\n3. **Tom e estilo:**  \n   - Genuinamente interessado  \n   - Demonstrar escuta ativa  \n   - Focado em entender antes de propor qualquer solu√ß√£o  \n\n4. **Quando h√° imagem:**  \n   - Analise e comente o conte√∫do da imagem de forma natural  \n   - Se a imagem for irrelevante, ignore-a sem chamar aten√ß√£o para isso  \n\n5. **Quando h√° quoted message (‚ö†Ô∏è):**  \n   - Entenda que o lead est√° reagindo a algo anterior  \n   - Consulte sua mem√≥ria ou hist√≥rico breve  \n   - Fa√ßa refer√™ncia sutil ao tema original se fizer sentido  \n\n6. **Pergunta qualificadora:**  \n   - Fa√ßa **apenas uma pergunta** se for √∫til para continuar a conversa  \n   - Nunca force a pr√≥xima etapa ‚Äî crie **engajamento aut√™ntico**\n\n---\n\n# OUTPUT ESPERADO\n\nResponda **apenas com o texto final** a ser enviado ao lead ‚Äî  \nsem explica√ß√µes, sem formata√ß√£o adicional e sem repetir o conte√∫do acima.",
        "needsFallback": true,
        "options": {
          "systemMessage": "=# FUN√á√ÉO PRINCIPAL\nVoc√™ √© um agente conversacional corporativo focado em qualifica√ß√£o e relacionamento humano-estrat√©gico, representando a CoreConnect AI em canais digitais.\n\n# IDENTIDADE\nVoc√™ √© Frank, consultor da CoreConnect AI especializado em automa√ß√£o inteligente e estrat√©gia empresarial com IA.\nSeu CEO √© Francisco Pasteur, expert em transforma√ß√£o digital B2B.\n\n# PERSONALIDADE\n- Profissional mas humanizado\n- Tom natural, consultivo (nunca vendedor)\n- Curioso e genuinamente interessado\n- Emp√°tico com desafios do lead\n- Respostas: 2-4 senten√ßas, 1 pergunta por vez\n- Transparente sobre ser IA quando perguntado\n\n# ESTILO DE COMUNICA√á√ÉO\n- Clareza antes de persuas√£o  \n- Curiosidade antes de sugest√£o  \n- Empatia antes de instru√ß√£o  \n\n# USO DO NOME DO LEAD\nRegra geral: use o nome com comedimento.  \n**Quando usar:**\n- Primeira mensagem (apresenta√ß√£o)\n- In√≠cio de novo assunto importante\n- Valida√ß√£o/reconhecimento (‚ÄúEntendo, Maria‚Ä¶‚Äù)\n- Momentos que exigem empatia especial  \n\n**Quando N√ÉO usar:**\n- Frases curtas e diretas\n- Continua√ß√£o imediata da conversa\n- Contextos onde soaria for√ßado  \n\n**Se o nome n√£o estiver dispon√≠vel:**\n\"Ol√°! Prazer falar com voc√™. Sou Frank, consultor da CoreConnect AI. Como prefere que eu te chame?\"  \n\n**Se perguntarem se voc√™ √© IA:**\n\"Sou um sistema de √∫ltima gera√ß√£o da CoreConnect AI, conduzido por intelig√™ncia artificial. Trabalho em conjunto com nossa equipe humana. O Francisco Pasteur, nosso CEO, lidera o desenvolvimento. Estou dispon√≠vel 24/7 e, quando necess√°rio, conecto voc√™ com nossa equipe. Como posso ajudar hoje?\"\n\n# SUA TAREFA\nFoco √∫nico: conduzir conversa natural e qualificadora com o lead.  \nInvestigue, com naturalidade:\n- Cargo e poder de decis√£o (quem decide?)  \n- Problemas e necessidades (qual a dor?)  \n- Timeline e urg√™ncia (quando precisa?)  \n- Or√ßamento e investimento (quanto pode investir?)  \n\n**Diretrizes:**\n- Seja natural, emp√°tico e consultivo  \n- 2-4 senten√ßas por resposta, 1 pergunta por vez  \n- Use o nome do lead com comedimento  \n\n**IMPORTANTE:**  \nN√£o mencione ‚Äúscoring‚Äù, ‚ÄúANUM‚Äù ou ‚Äúqualifica√ß√£o‚Äù ao lead.  \nA an√°lise acontece automaticamente em segundo plano.  \n\nSe houver interesse claro (ex.: ‚Äúcomo funciona?‚Äù, ‚Äúme explica melhor?‚Äù), colete um √∫ltimo dado qualificador e sinalize que conectar√° com a equipe humana naturalmente (sem formalidades excessivas).\n\n# DIRETRIZES DE CONVERSA√á√ÉO\n**FAZER:**\n- Conversar como consultor humano experiente  \n- Fazer perguntas abertas que geram reflex√£o  \n- Validar e reconhecer desafios do lead  \n- Usar contexto de conversas anteriores (mem√≥ria)  \n- Guiar naturalmente para pr√≥ximos passos  \n\n**N√ÉO FAZER:**\n- M√∫ltiplas perguntas na mesma mensagem  \n- Textos longos  \n- Repetir o nome do lead toda hora  \n- Mencionar termos t√©cnicos (ANUM, scores)  \n- Ser insistente/pushy  \n- Usar jarg√£o t√©cnico desnecess√°rio  \n\n# COMANDOS DO SISTEMA (Failsafe)\nOs comandos (ex.: #audio, #texto, #padrao, #sair, #limpar, #listar) s√£o tratados pelo fluxo ‚ÄúProcess Commands‚Äù.  \n**N√£o responda comandos** se o roteador j√° tiver atuado.  \n\nSe, excepcionalmente, um comando chegar diretamente at√© voc√™ (mensagem come√ßando com \"#\" sem sinal de roteamento):  \n‚Üí Responda curto: \"Comando n√£o identificado. Digite #listar.\"  \nEm seguida, retome o foco consultivo.  \n\n# IMAGENS E M√çDIA\nQuando o lead enviar uma imagem:\n1. Analise o conte√∫do visual com aten√ß√£o  \n2. Relacione com o contexto da conversa (automa√ß√£o, efici√™ncia, equipe, tempo, produtividade, resultados)  \n3. Responda de forma relevante ao que viu  \n4. Fa√ßa 1 pergunta qualificadora baseada na imagem, se apropriado  \n\n**Exemplos:**\n- Planilha ca√≥tica ‚Üí ‚ÄúVi essa planilha! Parece haver muito trabalho manual. Quantas horas/semana a equipe gasta com isso?‚Äù  \n- Dashboard ‚Üí ‚ÄúInteressante esse dashboard. Qual m√©trica aqui te preocupa mais?‚Äù  \n- Escrit√≥rio ‚Üí ‚ÄúLegal o espa√ßo. Quantas pessoas atuam nesse time hoje?‚Äù  \n\n# OUTPUT FINAL\nRetorne apenas a mensagem que ser√° enviada ao lead.  \nN√£o inclua explica√ß√µes, tags ou qualquer texto deste prompt.",
          "passthroughBinaryImages": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -2360,
        152
      ],
      "id": "477e21f8-8c78-43ad-984d-1588a84bbfcf",
      "name": "AI Agent Frank"
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "={{ $json.ai_message }}",
        "voice": "onyx",
        "options": {
          "response_format": "opus",
          "speed": 1,
          "binaryPropertyOutput": "audio"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -1056,
        152
      ],
      "id": "e3566d9a-9341-418d-82ad-59f0132e66bc",
      "name": "Generate: Audio Response",
      "credentials": {
        "openAiApi": {
          "id": "qG3pb1apvREZV7Pl",
          "name": "OpenAI | CORE ONE‚Ñ¢ - FRANK | AUDIO"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b5101243-38a3-4ea9-9809-ab288138ffd1",
              "leftValue": "={{ $('Prepare: Chat Context').item.json.sender_type === 'user' }}",
              "rightValue": "user",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1728,
        152
      ],
      "id": "d0743c19-7c91-4974-b6f6-bc5566cc50d2",
      "name": "Check: Is Lead Message"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "8F6DWDbmaPCZrI18",
          "mode": "list",
          "cachedResultUrl": "/workflow/8F6DWDbmaPCZrI18",
          "cachedResultName": "ANUM Analyzer | v4"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {}
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        -1504,
        56
      ],
      "id": "36ed6c18-3192-4e68-82cf-29468b4898f7",
      "name": "Execute: ANUM Analyzer"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7b99451c-ea74-4df7-a373-d50eba07e142",
              "leftValue": "={{ $json.media_type === 'image' }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2864,
        4
      ],
      "id": "d6644703-a530-43b1-9043-2cf15878678a",
      "name": "Check: Has Media"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -3984,
        4
      ],
      "id": "0a51fa17-accd-4ad4-98f0-d34387b3875d",
      "name": "Receive: Workflow Trigger"
    },
    {
      "parameters": {
        "jsCode": "// Filtrar apenas items v√°lidos\nconst validItems = items.filter(item => {\n  return item.json.whatsapp_id != null && \n         item.json.whatsapp_id !== '' &&\n         item.json.contact_id != null;\n});\n\nreturn validItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3760,
        4
      ],
      "id": "16613f37-1510-4e5b-b159-1b361c0f5e7e",
      "name": "Filter: Valid Input"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e1709c11-e052-4a6e-b098-636c639d162f",
              "name": "contact_id",
              "value": "={{ $json.contact_id }}",
              "type": "number"
            },
            {
              "id": "f9921c80-507b-4a5a-9e0c-e18e03ddbaf6",
              "name": "company_id",
              "value": "={{ $json.company_id }}",
              "type": "number"
            },
            {
              "id": "8a565464-bee9-49db-939a-d17a9b5c97cb",
              "name": "opt_out",
              "value": "={{ $json.opt_out }}",
              "type": "boolean"
            },
            {
              "id": "c57a7c4f-3fa3-46c1-9962-590de71e90be",
              "name": "contact_exists",
              "value": "={{ $json.contact_exists }}",
              "type": "boolean"
            },
            {
              "id": "40a2801b-0f07-4ff9-943e-1f701b5b7cb4",
              "name": "whatsapp_id",
              "value": "={{ $json.whatsapp_id }}",
              "type": "string"
            },
            {
              "id": "fefffc47-9598-4ebc-85f7-b6fd581e0302",
              "name": "contact_name",
              "value": "={{ $json.contact_name }}",
              "type": "string"
            },
            {
              "id": "c82b0216-ab8b-41b4-8649-53086f5c3791",
              "name": "message_content",
              "value": "={{ $json.message_content }}",
              "type": "string"
            },
            {
              "id": "f19286d6-3504-41b5-bc05-990ca22f70af",
              "name": "message_type",
              "value": "={{ $json.message_type }}",
              "type": "string"
            },
            {
              "id": "cd2aa8ae-db90-4c8f-bf7e-010aaed3643e",
              "name": "phone_number",
              "value": "={{ $json.phone_number }}",
              "type": "string"
            },
            {
              "id": "f50aac23-2c2e-4c68-aa45-a9a7417addc7",
              "name": "evolution_api_url",
              "value": "={{ $json.evolution_api_url }}",
              "type": "string"
            },
            {
              "id": "55a8edd8-7c32-4d11-9870-d8f13f89b758",
              "name": "evolution_instance",
              "value": "={{ $json.evolution_instance }}",
              "type": "string"
            },
            {
              "id": "f1fce5ca-2f78-4f94-8af5-5b42fea7cdd1",
              "name": "evolution_api_key",
              "value": "={{ $json.evolution_api_key }}",
              "type": "string"
            },
            {
              "id": "28efdb1c-d978-4340-a143-a1860f4c56a6",
              "name": "message_id",
              "value": "={{ $json.message_id }}",
              "type": "string"
            },
            {
              "id": "7551378a-f7ab-4838-b6f2-fa98c9102f4a",
              "name": "quoted_message",
              "value": "={{ $json.quoted_message }}",
              "type": "string"
            },
            {
              "id": "d3fe220d-b4d6-4775-84cf-5002482b3a22",
              "name": "transcribed",
              "value": "={{ $json.transcribed }}",
              "type": "string"
            },
            {
              "id": "81b10e09-73ef-49cc-911e-ad3dbece47e1",
              "name": "sender_type",
              "value": "={{ $json.sender_type }}",
              "type": "string"
            },
            {
              "id": "56311743-0e7b-4735-b127-94e55038786c",
              "name": "has_media",
              "value": "={{ $json.has_media }}",
              "type": "boolean"
            },
            {
              "id": "899e5e9f-a49c-4aaa-97cb-120d27b2284f",
              "name": "media_url",
              "value": "={{ $json.media_url }}",
              "type": "string"
            },
            {
              "id": "63cdec48-1206-4195-9388-40a9e2fd7469",
              "name": "media_mime_type",
              "value": "={{ $json.media_mime_type }}",
              "type": "string"
            },
            {
              "id": "ca5e25a6-67ce-432a-9bb3-0dac1b56742d",
              "name": "media_type",
              "value": "={{ $json.media_type }}",
              "type": "string"
            },
            {
              "id": "ca004165-5deb-46b1-a398-d1a8b0b08a66",
              "name": "caption",
              "value": "={{ $json.caption }}",
              "type": "string"
            },
            {
              "id": "157e165b-e09b-4f8b-8b90-f7f110ec2952",
              "name": "session_id",
              "value": "={{ 'contact_' + $json.contact_id + '_company_' + $json.company_id }}",
              "type": "string"
            },
            {
              "id": "2ac6741f-898e-497f-b788-a75469dc3ad0",
              "name": "body.data.message.base64",
              "value": "={{ $json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "478ec19e-71b4-4cac-b425-f3d276e73a68",
      "name": "Prepare: Chat Context",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3536,
        4
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d79e5da4-6a41-47fb-bbf6-a9927659323e",
              "name": "contact_id",
              "value": "={{ $json.contact_id }}",
              "type": "number"
            },
            {
              "id": "5409c256-1e84-4328-b7bc-bb832c184af9",
              "name": "company_id",
              "value": "={{ $json.company_id }}",
              "type": "number"
            },
            {
              "id": "3ed2d9cd-e9f6-410e-a0b4-f7f6b261e490",
              "name": "whatsapp_id",
              "value": "={{ $('Prepare: Chat Context').item.json.whatsapp_id }}",
              "type": "string"
            },
            {
              "id": "44f7a905-c941-4b2c-8656-edc4adfda544",
              "name": "message_type",
              "value": "={{ $('Prepare: Chat Context').item.json.message_type }}",
              "type": "string"
            },
            {
              "id": "56ef33f6-69d7-4f75-895c-669441142e37",
              "name": "message_content",
              "value": "={{ $('Prepare: Chat Context').item.json.message_content }}",
              "type": "string"
            },
            {
              "id": "41ff25ea-50f9-47ea-a2cb-100df9116b12",
              "name": "media_type",
              "value": "={{ $('Prepare: Chat Context').item.json.media_type }}",
              "type": "string"
            },
            {
              "id": "52f05a46-455a-449c-ba46-388a9f3053e5",
              "name": "has_media",
              "value": "={{ $('Prepare: Chat Context').item.json.has_media }}",
              "type": "boolean"
            },
            {
              "id": "bf005310-0538-436b-8c37-c2fed3ba6225",
              "name": "media_url",
              "value": "={{ $('Prepare: Chat Context').item.json.media_url }}",
              "type": "string"
            },
            {
              "id": "bb66b37f-4259-45a8-bc54-ecb04a156658",
              "name": "contact_name",
              "value": "={{ $('Prepare: Chat Context').item.json.contact_name }}",
              "type": "string"
            },
            {
              "id": "enrich-1",
              "name": "authority_score",
              "value": "={{ $json.authority_score || 0 }}",
              "type": "number"
            },
            {
              "id": "enrich-2",
              "name": "need_score",
              "value": "={{ $json.need_score || 0 }}",
              "type": "number"
            },
            {
              "id": "enrich-3",
              "name": "urgency_score",
              "value": "={{ $json.urgency_score || 0 }}",
              "type": "number"
            },
            {
              "id": "enrich-4",
              "name": "money_score",
              "value": "={{ $json.money_score || 0 }}",
              "type": "number"
            },
            {
              "id": "enrich-5",
              "name": "total_score",
              "value": "={{ $json.total_score || 0 }}",
              "type": "number"
            },
            {
              "id": "enrich-6",
              "name": "qualification_stage",
              "value": "={{ $json.qualification_stage || 'discovery' }}",
              "type": "string"
            },
            {
              "id": "enrich-7",
              "name": "is_qualified",
              "value": "={{ $json.is_qualified || false }}",
              "type": "boolean"
            },
            {
              "id": "enrich-8",
              "name": "audio_response",
              "value": "={{ $json.audio_response || false }}",
              "type": "boolean"
            },
            {
              "id": "enrich-9",
              "name": "text_response",
              "value": "={{ $json.text_response || false }}",
              "type": "boolean"
            },
            {
              "id": "3270e06f-1c62-49fc-8a87-879ffb4c096d",
              "name": "body.data.message.base64",
              "value": "={{ $('Prepare: Chat Context').first().json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "87b80b9c-ce80-42dc-beea-c005dfd88614",
      "name": "Enrich: ANUM and Preferences",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3088,
        4
      ]
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nconst result = [];\n\nfor (const item of items) {\n  const data = item.json;\n  \n  // Extrair base64 do caminho correto\n  const base64 = data.body?.data?.message?.base64;\n  \n  // Se tem base64, preparar binary data\n  if (base64 && data.media_type === 'image') {\n    // Converter base64 string para Buffer\n    const binaryBuffer = Buffer.from(base64, 'base64');\n    \n    result.push({\n      json: data,\n      binary: {\n        image_data: {\n          data: binaryBuffer.toString('base64'),\n          mimeType: data.media_mime_type || 'image/jpeg',\n          fileExtension: 'jpg',\n          fileName: 'image.jpg'\n        }\n      }\n    });\n  } else {\n    // N√£o tem base64, passa dados normalmente\n    result.push({\n      json: data\n    });\n  }\n}\n\nreturn result;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2640,
        -96
      ],
      "id": "c0f8c1d1-fc80-4645-bc76-ad2f407fb087",
      "name": "Prepare: Image Data"
    },
    {
      "parameters": {
        "tableId": "corev4_chat_history",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "session_id",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.session_id }}"
            },
            {
              "fieldId": "contact_id",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.contact_id }}"
            },
            {
              "fieldId": "company_id",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.company_id }}"
            },
            {
              "fieldId": "role",
              "fieldValue": "user"
            },
            {
              "fieldId": "message",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.message_content }}"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.message_type }}"
            },
            {
              "fieldId": "has_media",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.has_media }}"
            },
            {
              "fieldId": "media_url",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.media_url }}"
            },
            {
              "fieldId": "media_mime_type",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.media_mime_type }}"
            },
            {
              "fieldId": "message_timestamp",
              "fieldValue": "={{ new Date().toISOString() }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2296,
        -144
      ],
      "id": "b44e12a0-57d4-43c7-a467-df8fab46f4e0",
      "name": "Save: User Message",
      "credentials": {
        "supabaseApi": {
          "id": "LCC4ysI1Fxd9iDGz",
          "name": "Supabase Core"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://uosauvyafotuhktpjjkm.supabase.co/storage/v1/object/chat-images/{{ $('Prepare: Chat Context').item.json.company_id }}/{{ $('Prepare: Chat Context').item.json.contact_id }}/{{ $('Save: User Message').item.json.id }}.jpg",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "BEARER eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVvc2F1dnlhZm90dWhrdHBqamttIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjU0MDgxODcsImV4cCI6MjA0MDk4NDE4N30.3UzrMj0gw1aY8fcJw9649LjIKryLTNgmDNd9EuIpOx8"
            },
            {
              "name": "apikey",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVvc2F1dnlhZm90dWhrdHBqamttIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjU0MDgxODcsImV4cCI6MjA0MDk4NDE4N30.3UzrMj0gw1aY8fcJw9649LjIKryLTNgmDNd9EuIpOx8"
            },
            {
              "name": "Content-Type",
              "value": "={{ $('Prepare: Chat Context').item.json.media_mime_type || 'image/jpeg' }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "Raw/Custom",
              "value": "={{ $('Prepare: Image Data').item.binary.image_data.data }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1952,
        -144
      ],
      "id": "15b95a0d-7f17-4a00-846f-a74c0d61317b",
      "name": "Upload: Image to Storage"
    },
    {
      "parameters": {
        "tableId": "corev4_message_media",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "message_id",
              "fieldValue": "={{ $('Save: User Message').item.json.id }}"
            },
            {
              "fieldId": "company_id",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.company_id }}"
            },
            {
              "fieldId": "storage_provider",
              "fieldValue": "supabase"
            },
            {
              "fieldId": "storage_path",
              "fieldValue": "=chat-images/{{ $('Prepare: Chat Context').item.json.company_id }}/{{ $('Prepare: Chat Context').item.json.contact_id }}/{{ $('Save: User Message').item.json.id }}.jpg"
            },
            {
              "fieldId": "storage_url",
              "fieldValue": "=https://uosauvyafotuhktpjjkm.supabase.co/storage/v1/object/public/chat-images/{{ $('Prepare: Chat Context').item.json.company_id }}/{{ $('Prepare: Chat Context').item.json.contact_id }}/{{ $('Save: User Message').item.json.id }}.jpg"
            },
            {
              "fieldId": "original_url",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.media_url }}"
            },
            {
              "fieldId": "media_type",
              "fieldValue": "image"
            },
            {
              "fieldId": "mime_type",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.media_mime_type }}"
            },
            {
              "fieldId": "file_size",
              "fieldValue": "={{ $binary.image_data ? Buffer.byteLength($binary.image_data.data, 'base64') : null }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1728,
        -144
      ],
      "id": "a5484db2-e731-4902-b10f-a8c707963b3a",
      "name": "Save: Media Info",
      "credentials": {
        "supabaseApi": {
          "id": "LCC4ysI1Fxd9iDGz",
          "name": "Supabase Core"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Determinar modo de resposta baseado em prefer√™ncias e tipo de mensagem\nconst audioPref = $('Enrich: ANUM and Preferences').item.json.audio_response;\nconst textPref = $('Enrich: ANUM and Preferences').item.json.text_response;\nconst aiMessage = $('AI Agent Frank').item.json.output;\n\n// Buscar dados de contexto\nconst prepareContext = $('Prepare: Chat Context').item.json;\nconst messageType = prepareContext.message_type;  // ‚úÖ \"audio\" ou \"text\"\nconst mediaType = prepareContext.media_type;      // ‚úÖ \"audio\", \"image\", \"none\"\nconst transcribed = prepareContext.transcribed;   // ‚ö†Ô∏è STRING \"true\", n√£o boolean!\n\n// Detectar se era √°udio - CORRIGIDO\nconst wasAudio = (\n  messageType === 'audio' ||           // ‚úÖ Tipo correto!\n  mediaType === 'audio' ||             // ‚úÖ Alternativa\n  transcribed === 'true' ||            // ‚úÖ Comparar com STRING!\n  transcribed === true                 // ‚úÖ Fallback para boolean\n);\n\nlet responseMode = 'text'; // default\n\n// L√≥gica de decis√£o\nif (audioPref === true && textPref === false) {\n  // Comando #audio - SEMPRE √°udio\n  responseMode = 'audio';\n} else if (audioPref === false && textPref === true) {\n  // Comando #texto - SEMPRE texto\n  responseMode = 'text';\n} else {\n  // Modo padr√£o (#padrao ou sem prefer√™ncia)\n  // Espelha o formato da mensagem do usu√°rio\n  responseMode = wasAudio ? 'audio' : 'text';\n}\n\nreturn [{\n  json: {\n    response_mode: responseMode,\n    ai_message: aiMessage,\n    contact_id: prepareContext.contact_id,\n    company_id: prepareContext.company_id,\n    phone_number: prepareContext.phone_number,\n    whatsapp_id: prepareContext.whatsapp_id,\n    evolution_api_url: prepareContext.evolution_api_url,\n    evolution_instance: prepareContext.evolution_instance,\n    evolution_api_key: prepareContext.evolution_api_key,\n    session_id: prepareContext.session_id,\n    // Debug info\n    debug_messageType: messageType,\n    debug_mediaType: mediaType,\n    debug_transcribed: transcribed,\n    debug_wasAudio: wasAudio,\n    debug_audioPref: audioPref,\n    debug_textPref: textPref\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1504,
        248
      ],
      "id": "0d0de3f9-d8aa-4fa5-b159-326534f0b015",
      "name": "Determine: Response Mode"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "audio-check",
              "leftValue": "={{ $json.response_mode }}",
              "rightValue": "audio",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1280,
        248
      ],
      "id": "999b36cf-3aaf-43ed-983a-ed9fcb884505",
      "name": "Route: Audio Response"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Convert: Audio to Base64').item.json.evolution_api_url }}/message/sendWhatsAppAudio/{{ encodeURIComponent($('Convert: Audio to Base64').item.json.evolution_instance) }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "apikey",
              "value": "={{ $('Convert: Audio to Base64').item.json.evolution_api_key }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.phone_number }}"
            },
            {
              "name": "audio",
              "value": "={{ $json.audio_base64 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -608,
        152
      ],
      "id": "cd609bc4-13ee-45a0-a694-271ece922b06",
      "name": "Send: WhatsApp Audio"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Determine: Response Mode').item.json.evolution_api_url }}/message/sendText/{{ $('Determine: Response Mode').item.json.evolution_instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "apikey",
              "value": "={{ $('Determine: Response Mode').item.json.evolution_api_key }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Prepare: Chat Context').item.json.phone_number }}"
            },
            {
              "name": "text",
              "value": "={{ $('Determine: Response Mode').item.json.ai_message }}"
            }
          ]
        },
        "options": {}
      },
      "id": "56ce821b-10b0-4497-a2e7-92f5a9b6c4c3",
      "name": "Send: WhatsApp Text",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -608,
        344
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "output-1",
              "name": "success",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "output-2",
              "name": "contact_id",
              "value": "={{ $('Determine: Response Mode').item.json.contact_id }}",
              "type": "number"
            },
            {
              "id": "output-3",
              "name": "response",
              "value": "={{ $('Determine: Response Mode').item.json.ai_message }}",
              "type": "string"
            },
            {
              "id": "output-3b",
              "name": "response_mode",
              "value": "={{ $('Determine: Response Mode').item.json.response_mode }}",
              "type": "string"
            },
            {
              "id": "output-4",
              "name": "session_id",
              "value": "={{ $('Determine: Response Mode').item.json.session_id }}",
              "type": "string"
            },
            {
              "id": "output-5",
              "name": "timestamp",
              "value": "={{ $now.toISO() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5f654180-9a51-462f-836e-674c6a209970",
      "name": "Format: Chat Output",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -160,
        248
      ]
    },
    {
      "parameters": {
        "tableId": "corev4_chat_history",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "session_id",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.session_id }}"
            },
            {
              "fieldId": "message",
              "fieldValue": "={{ $('AI Agent Frank').item.json.output }}"
            },
            {
              "fieldId": "contact_id",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.contact_id }}"
            },
            {
              "fieldId": "company_id",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.company_id }}"
            },
            {
              "fieldId": "role",
              "fieldValue": "assistant"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('Prepare: Chat Context').item.json.message_type }}"
            },
            {
              "fieldId": "tokens_used",
              "fieldValue": "={{ $('AI Agent Frank').item.json.usage?.totalTokens }}"
            },
            {
              "fieldId": "cost_usd",
              "fieldValue": "={{ $('AI Agent Frank').item.json.usage?.cost }}"
            },
            {
              "fieldId": "model_used",
              "fieldValue": "={{ $('AI Agent Frank').item.json.model || 'gpt-4.1-mini-2025-04-14' }}"
            },
            {
              "fieldId": "message_timestamp",
              "fieldValue": "={{ $now }}"
            }
          ]
        }
      },
      "id": "f6fbcec6-5c8a-45b3-bb96-3974d77ee9f4",
      "name": "Save: AI Response",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1952,
        152
      ],
      "credentials": {
        "supabaseApi": {
          "id": "LCC4ysI1Fxd9iDGz",
          "name": "Supabase Core"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Acessar binary data do input\nconst inputData = $input.first();\nconst binaryPropertyName = Object.keys(inputData.binary)[0]; // Pega o nome da propriedade binary (geralmente \"data\")\nconst binaryBuffer = inputData.binary[binaryPropertyName].data;\n\n// Converter para base64\nconst base64Audio = binaryBuffer.toString('base64');\n\n// Pegar dados do contexto\nconst responseMode = $('Determine: Response Mode').item.json;\n\nreturn [{\n  json: {\n    phone_number: responseMode.phone_number,\n    audio_base64: base64Audio,\n    evolution_api_url: responseMode.evolution_api_url,\n    evolution_instance: responseMode.evolution_instance,\n    evolution_api_key: responseMode.evolution_api_key\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -832,
        152
      ],
      "id": "c3c9df85-2fa6-4cd1-ac4d-f9866ffc42b1",
      "name": "Convert: Audio to Base64"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini-2025-04-14",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini-2025-04-14"
        },
        "options": {
          "maxTokens": 2000,
          "temperature": 0.7
        }
      },
      "id": "77aad484-1955-4fe9-ad15-9c0e21d51b8c",
      "name": "Model: OpenAI Chat",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -2416,
        376
      ],
      "credentials": {
        "openAiApi": {
          "id": "txoE7pVX433qEz2A",
          "name": "OpenAI | CORE ONE‚Ñ¢ - FRANK | TEXTO"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -2288,
        376
      ],
      "id": "ce0f39f8-f470-484a-9d37-c6aff5c324ec",
      "name": "Model: Gemini Chat",
      "credentials": {
        "googlePalmApi": {
          "id": "LzScbb9FM7NYxbHO",
          "name": "Google Core"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Prepare: Chat Context').item.json.session_id }}",
        "tableName": "corev4_n8n_chat_histories",
        "contextWindowLength": 35
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -2160,
        376
      ],
      "id": "e83bdf65-fdbf-4c07-a895-5e66dd62fc0e",
      "name": "Store: Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "HCvX4Ypw2MiRDsdm",
          "name": "Postgres Core"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Fetch: Lead State and Preferences": {
      "main": [
        [
          {
            "node": "Enrich: ANUM and Preferences",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge: AI Outputs": {
      "main": [
        [
          {
            "node": "Format: Chat Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent Frank": {
      "main": [
        [
          {
            "node": "Save: AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate: Audio Response": {
      "main": [
        [
          {
            "node": "Convert: Audio to Base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check: Is Lead Message": {
      "main": [
        [
          {
            "node": "Determine: Response Mode",
            "type": "main",
            "index": 0
          },
          {
            "node": "Execute: ANUM Analyzer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check: Has Media": {
      "main": [
        [
          {
            "node": "Prepare: Image Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent Frank",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Receive: Workflow Trigger": {
      "main": [
        [
          {
            "node": "Filter: Valid Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter: Valid Input": {
      "main": [
        [
          {
            "node": "Prepare: Chat Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare: Chat Context": {
      "main": [
        [
          {
            "node": "Fetch: Lead State and Preferences",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enrich: ANUM and Preferences": {
      "main": [
        [
          {
            "node": "Check: Has Media",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare: Image Data": {
      "main": [
        [
          {
            "node": "AI Agent Frank",
            "type": "main",
            "index": 0
          },
          {
            "node": "Save: User Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save: User Message": {
      "main": [
        [
          {
            "node": "Upload: Image to Storage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload: Image to Storage": {
      "main": [
        [
          {
            "node": "Save: Media Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Determine: Response Mode": {
      "main": [
        [
          {
            "node": "Route: Audio Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route: Audio Response": {
      "main": [
        [
          {
            "node": "Generate: Audio Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send: WhatsApp Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send: WhatsApp Audio": {
      "main": [
        [
          {
            "node": "Merge: AI Outputs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send: WhatsApp Text": {
      "main": [
        [
          {
            "node": "Merge: AI Outputs",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Save: AI Response": {
      "main": [
        [
          {
            "node": "Check: Is Lead Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert: Audio to Base64": {
      "main": [
        [
          {
            "node": "Send: WhatsApp Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Model: OpenAI Chat": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Frank",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Model: Gemini Chat": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent Frank",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "Store: Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent Frank",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "07c43fb1-880e-4f48-9cc4-60ca6cf64559",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5c6394fedb685d155bbe72063becfd91d616d8e123397941c9863e7b805328ae"
  },
  "id": "pvMsb1uQbB0E3LAF",
  "tags": [
    {
      "createdAt": "2025-10-16T11:45:27.519Z",
      "updatedAt": "2025-10-16T11:45:27.519Z",
      "id": "eTCC1MPmHZOu7LAH",
      "name": "corev4"
    }
  ]
}